
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CategoryScalarFieldEnum = {
  category_id: 'category_id',
  category_name: 'category_name'
};

exports.Prisma.CollegeScalarFieldEnum = {
  college_id: 'college_id',
  college_name: 'college_name',
  city: 'city',
  state: 'state',
  pincode: 'pincode'
};

exports.Prisma.DepartmentScalarFieldEnum = {
  department_id: 'department_id',
  department_name: 'department_name'
};

exports.Prisma.ProgramScalarFieldEnum = {
  program_id: 'program_id',
  department_id: 'department_id',
  college_id: 'college_id',
  duration: 'duration'
};

exports.Prisma.Seat_MatrixScalarFieldEnum = {
  program_id: 'program_id',
  category_id: 'category_id',
  total_seats: 'total_seats'
};

exports.Prisma.AdminScalarFieldEnum = {
  admin_id: 'admin_id',
  email: 'email',
  password: 'password'
};

exports.Prisma.StudentScalarFieldEnum = {
  student_id: 'student_id',
  name: 'name',
  email: 'email',
  password: 'password',
  mobile_number: 'mobile_number',
  gender: 'gender',
  current_status: 'current_status',
  isRegistered: 'isRegistered',
  general_rank: 'general_rank',
  category_rank: 'category_rank',
  category_id: 'category_id'
};

exports.Prisma.PreferencesScalarFieldEnum = {
  student_id: 'student_id',
  preference_number: 'preference_number',
  created_at: 'created_at',
  program_id: 'program_id'
};

exports.Prisma.RoundScalarFieldEnum = {
  round_number: 'round_number',
  start_time: 'start_time',
  end_time: 'end_time',
  duration: 'duration'
};

exports.Prisma.Allocation_StatusScalarFieldEnum = {
  student_id: 'student_id',
  program_id: 'program_id',
  category_id: 'category_id',
  rank_value_used: 'rank_value_used',
  rank_type_used: 'rank_type_used',
  round_id: 'round_id'
};

exports.Prisma.CutOff_ranksScalarFieldEnum = {
  cutOff_id: 'cutOff_id',
  program_id: 'program_id',
  category_id: 'category_id',
  closing_rank: 'closing_rank',
  opening_rank: 'opening_rank',
  round_id: 'round_id'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};
exports.gender = exports.$Enums.gender = {
  male: 'male',
  female: 'female'
};

exports.status = exports.$Enums.status = {
  float: 'float',
  freeze: 'freeze',
  withdrawn: 'withdrawn'
};

exports.rankType = exports.$Enums.rankType = {
  general: 'general',
  category: 'category'
};

exports.Prisma.ModelName = {
  Category: 'Category',
  College: 'College',
  Department: 'Department',
  Program: 'Program',
  Seat_Matrix: 'Seat_Matrix',
  Admin: 'Admin',
  Student: 'Student',
  Preferences: 'Preferences',
  Round: 'Round',
  Allocation_Status: 'Allocation_Status',
  CutOff_ranks: 'CutOff_ranks'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
